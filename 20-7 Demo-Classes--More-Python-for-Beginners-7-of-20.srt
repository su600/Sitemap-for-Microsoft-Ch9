1
00:00:00,000 --> 00:00:04,515
>> Let's go ahead and
create a basic class,

2
00:00:04,515 --> 00:00:06,870
So again, the way that we
define a class is by using

3
00:00:06,870 --> 00:00:10,410
the keyword class here
and then give it a name,

4
00:00:10,410 --> 00:00:13,890
So I'm going to say
"Presenter", just like that,

5
00:00:13,890 --> 00:00:17,520
Now, I can go ahead
and start defining

6
00:00:17,520 --> 00:00:22,125
all of the functions and whatever
else it is that I might want,

7
00:00:22,125 --> 00:00:26,340
Most commonly you're going to
start with a constructor here,

8
00:00:26,340 --> 00:00:28,110
So I'm going to go
ahead and just simply

9
00:00:28,110 --> 00:00:29,850
say def and then underscore,

10
00:00:29,850 --> 00:00:32,280
underscore, and then init,

11
00:00:32,280 --> 00:00:34,635
and now you'll notice
that Visual Studio

12
00:00:34,635 --> 00:00:36,945
is automatically going
to help me out here,

13
00:00:36,945 --> 00:00:40,575
that I just hit "Tab" and then it
just gave me this auto-complete,

14
00:00:40,575 --> 00:00:42,850
Which can be helpful sometimes,

15
00:00:42,850 --> 00:00:44,540
for right now though I'm not

16
00:00:44,540 --> 00:00:47,120
already worried about
what's going on there,

17
00:00:47,120 --> 00:00:50,330
So I'm just going to do a
little bit of clean up and I'm

18
00:00:50,330 --> 00:00:53,840
going to add in that
name parameter there,

19
00:00:53,840 --> 00:00:58,645
So now I'm going to say
self,name equals name,

20
00:00:58,645 --> 00:01:02,600
and I'm going to add in
my little say hello,

21
00:01:02,600 --> 00:01:07,195
so def say hello

22
00:01:07,195 --> 00:01:12,365
self and then we'll go ahead and
say print and then self,name,

23
00:01:12,365 --> 00:01:15,155
Cool, So now, I'm ready to

24
00:01:15,155 --> 00:01:18,350
actually use this presenter
class and the way that I'm going

25
00:01:18,350 --> 00:01:23,940
to use this is by saying
our presenter equals,

26
00:01:23,940 --> 00:01:26,100
our presenter passing the name,

27
00:01:26,100 --> 00:01:29,420
I'm going to say "Chris," Of course,

28
00:01:29,420 --> 00:01:31,160
if you know me at all, you know that

29
00:01:31,160 --> 00:01:33,500
my name is in fact Christopher,

30
00:01:33,500 --> 00:01:36,790
So let's go ahead and fix
that mistake, just like that,

31
00:01:36,790 --> 00:01:39,620
and now let's go ahead and run

32
00:01:39,620 --> 00:01:46,420
presenter and say
hello, boom-boom, cool,

33
00:01:46,420 --> 00:01:49,625
So now that I've got all of that,

34
00:01:49,625 --> 00:01:53,000
let me go ahead and run
this little sample,

35
00:01:53,000 --> 00:01:57,170
So let me change directories where

36
00:01:57,170 --> 00:02:02,015
all my directory zero
three, there we go,

37
00:02:02,015 --> 00:02:03,305
Just do a little bit
of clean up there,

38
00:02:03,305 --> 00:02:05,015
Okay, now in the right directory,

39
00:02:05,015 --> 00:02:09,965
So now let's go ahead and say
Python and then my basic class,py,

40
00:02:09,965 --> 00:02:11,510
and where you're going to notice is

41
00:02:11,510 --> 00:02:13,310
that it prints out Christopher,

42
00:02:13,310 --> 00:02:15,830
Again, the reason that it
prints out Christopher is

43
00:02:15,830 --> 00:02:19,400
because my say hello is going
to print out that name,

44
00:02:19,400 --> 00:02:23,150
and of course I went ahead
and set that right there,

45
00:02:23,150 --> 00:02:25,250
If I didn't have that line of code,

46
00:02:25,250 --> 00:02:27,200
we'll just go ahead
and comment that out,

47
00:02:27,200 --> 00:02:28,745
Well, we run everything,

48
00:02:28,745 --> 00:02:31,295
and now you're going to notice
that it will just print out Chris,

49
00:02:31,295 --> 00:02:35,405
So just prove the fact that
it is grabbing that from

50
00:02:35,405 --> 00:02:41,260
the constructor and setting
that inside of the object,

51
00:02:41,260 --> 00:02:46,425
Now, let's turn our
attention to a property,

52
00:02:46,425 --> 00:02:49,040
So I've already got all
the code are written out,

53
00:02:49,040 --> 00:02:51,830
So that way you don't have to
watch me, type everything,

54
00:02:51,830 --> 00:02:55,060
but I'm going to do a couple
of little additions in here,

55
00:02:55,060 --> 00:02:59,780
The first thing that I want you
to notice is in my constructor,

56
00:02:59,780 --> 00:03:02,090
that I'm going to go
ahead and leave you

57
00:03:02,090 --> 00:03:06,130
exact same code as self,name,

58
00:03:06,130 --> 00:03:12,775
but we're actually right
here calling a property,

59
00:03:12,775 --> 00:03:17,720
So we are not going in and accessing
the field behind the scenes,

60
00:03:17,720 --> 00:03:19,915
but rather we're
calling the "Property,"

61
00:03:19,915 --> 00:03:23,715
Very specifically, here
now I'll put this in red,

62
00:03:23,715 --> 00:03:28,440
Just to sort of drive
the point home here,

63
00:03:30,530 --> 00:03:37,245
I am not saying
self,__name equals name,

64
00:03:37,245 --> 00:03:38,880
I'm not doing that,

65
00:03:38,880 --> 00:03:41,000
and the reason that
I'm not doing that

66
00:03:41,000 --> 00:03:43,505
is because as a best practice,

67
00:03:43,505 --> 00:03:45,650
if you create a property,

68
00:03:45,650 --> 00:03:49,690
you should always use the property,

69
00:03:49,690 --> 00:03:51,835
The property is there for a reason,

70
00:03:51,835 --> 00:03:54,290
that the property is going to

71
00:03:54,290 --> 00:03:56,750
be executing some
level of validation,

72
00:03:56,750 --> 00:03:58,475
or maybe it's going to
be updating something,

73
00:03:58,475 --> 00:04:01,010
somewhere else or
it's doing something,

74
00:04:01,010 --> 00:04:02,390
You're creating it for

75
00:04:02,390 --> 00:04:05,150
a reason and if you're
creating it for a reason,

76
00:04:05,150 --> 00:04:08,070
you should always call that property,

77
00:04:08,070 --> 00:04:12,770
That one little bug that
can very easily creep into

78
00:04:12,770 --> 00:04:15,290
your code is calling the property in

79
00:04:15,290 --> 00:04:18,605
some places and not calling
it in other places,

80
00:04:18,605 --> 00:04:22,450
Don't do that, You're just going
to ask for heartache there,

81
00:04:22,450 --> 00:04:24,095
If you set up the property,

82
00:04:24,095 --> 00:04:26,600
always call the property
even though, "Yeah,

83
00:04:26,600 --> 00:04:27,905
I know I'm inside the class,

84
00:04:27,905 --> 00:04:31,770
I can just go ahead and call
that __name," Don't do it,

85
00:04:31,770 --> 00:04:34,575
You're just asking for heartache,

86
00:04:34,575 --> 00:04:37,275
So now I've got my property setup,

87
00:04:37,275 --> 00:04:40,110
Oops, I've got, stop it,

88
00:04:40,110 --> 00:04:42,030
I've got my property setup here,

89
00:04:42,030 --> 00:04:43,610
It's just highlighting that fact

90
00:04:43,610 --> 00:04:45,695
inside of Visual Studio that's fine,

91
00:04:45,695 --> 00:04:49,310
So I've got my property
setup and now I want

92
00:04:49,310 --> 00:04:53,605
to go ahead and define
the getter side,

93
00:04:53,605 --> 00:04:56,070
So again, this is going
to return my value,

94
00:04:56,070 --> 00:04:58,760
You'll notice that this is
going to return my name,

95
00:04:58,760 --> 00:05:01,040
I'm going to add in just a
little bit of code here,

96
00:05:01,040 --> 00:05:02,380
I'm just going to say "Print,"

97
00:05:02,380 --> 00:05:08,000
Then in the getter just to
highlight the fact that,

98
00:05:08,000 --> 00:05:10,415
"Hey, we're inside of there,"

99
00:05:10,415 --> 00:05:14,895
So his will return back that name
and then here's the "Setter,"

100
00:05:14,895 --> 00:05:17,335
You'll notice that
what we're doing here,

101
00:05:17,335 --> 00:05:23,810
is we're setting up a brand new
little attribute right here,

102
00:05:23,810 --> 00:05:27,825
name and you'll notice of course,

103
00:05:27,825 --> 00:05:29,695
that matches up there,

104
00:05:29,695 --> 00:05:32,070
So that's how those two
are being tied together,

105
00:05:32,070 --> 00:05:34,240
While identifying the fact
that this is going to

106
00:05:34,240 --> 00:05:36,895
be a setter and so now,

107
00:05:36,895 --> 00:05:39,234
what I can do is

108
00:05:39,234 --> 00:05:42,275
setup whatever cool validation
it is that I might want,

109
00:05:42,275 --> 00:05:44,955
In my case, I'm just
going to say "Print

110
00:05:44,955 --> 00:05:48,910
in Setter" just like that,

111
00:05:48,910 --> 00:05:54,125
and prove the fact that
we're inside of there,

112
00:05:54,125 --> 00:05:56,140
Now once I get down to my code,

113
00:05:56,140 --> 00:05:57,610
you'll notice I'm going
to create an instance

114
00:05:57,610 --> 00:05:59,200
of the presenter just like before,

115
00:05:59,200 --> 00:06:01,285
One more time, I'm
going to go ahead and

116
00:06:01,285 --> 00:06:04,090
update the name and then finally,

117
00:06:04,090 --> 00:06:07,030
I'm going to go ahead
and print out the name,

118
00:06:07,030 --> 00:06:09,260
So if I run this,

119
00:06:13,770 --> 00:06:18,580
what you're going to notice is the
fact that we are in the setter,

120
00:06:18,580 --> 00:06:24,360
in the setter, in the getter and
then it's printing out my name,

121
00:06:24,360 --> 00:06:26,529
Now you might notice up here

122
00:06:26,529 --> 00:06:28,990
that it's running in
the setter thrice,

123
00:06:28,990 --> 00:06:33,630
So we've access to the setter
side of our property twice,

124
00:06:33,630 --> 00:06:35,230
You might be going
well, wait a minute,

125
00:06:35,230 --> 00:06:37,720
I only see that happening once,

126
00:06:37,720 --> 00:06:39,850
I only see that happening here,

127
00:06:39,850 --> 00:06:43,490
Well remember, we
called the constructor,

128
00:06:43,490 --> 00:06:46,915
If you remember, we had a
big long talk about this,

129
00:06:46,915 --> 00:06:50,960
Up here in my constructor,

130
00:06:51,080 --> 00:06:55,920
I've called the setter there,

131
00:06:55,920 --> 00:06:57,905
Because again, best practice,

132
00:06:57,905 --> 00:06:59,255
if you create a property,

133
00:06:59,255 --> 00:07:01,445
you should always use the property,

134
00:07:01,445 --> 00:07:03,965
So that's how we can set up a class

135
00:07:03,965 --> 00:07:08,090
inside of Python and
that's also how we can

136
00:07:08,090 --> 00:07:10,700
take advantage of properties to get

137
00:07:10,700 --> 00:07:12,740
a little bit more control over

138
00:07:12,740 --> 00:07:16,530
how it is that somebody is
going to use our class,


1
00:00:01,550 --> 00:00:05,640
>> One of the things that
you're going to notice when you

2
00:00:05,640 --> 00:00:08,970
start getting in and
playing around with data,

3
00:00:08,970 --> 00:00:12,200
is the fact that you're going
to work very iteratively,

4
00:00:12,200 --> 00:00:14,655
That you're going to
try a couple of things,

5
00:00:14,655 --> 00:00:16,290
go back, make a couple of changes,

6
00:00:16,290 --> 00:00:17,530
try it again, go back,

7
00:00:17,530 --> 00:00:18,750
make a couple of changes,

8
00:00:18,750 --> 00:00:21,360
try it again and so forth and so on,

9
00:00:21,360 --> 00:00:26,460
The problem with doing that
with more traditional tools is

10
00:00:26,460 --> 00:00:29,790
the fact that you oftentimes

11
00:00:29,790 --> 00:00:32,685
have to set up a little
bit of scaffolding,

12
00:00:32,685 --> 00:00:36,360
and getting to the exact spot of code

13
00:00:36,360 --> 00:00:39,855
that you want to be able to run
can be a little bit clunky,

14
00:00:39,855 --> 00:00:44,310
So this is where Jupyter
comes into play,

15
00:00:44,310 --> 00:00:48,410
So what I want to take a look
at here is the concept of

16
00:00:48,410 --> 00:00:52,670
Jupyter Notebooks and where it
is that you can set this up,

17
00:00:52,670 --> 00:00:55,490
where it is that you
can run this, etc,

18
00:00:55,490 --> 00:01:01,280
So Jupyter is an open source
platform or framework, if you will,

19
00:01:01,280 --> 00:01:04,010
and really what it's
there to do is to give

20
00:01:04,010 --> 00:01:07,460
you an integrated
development environment,

21
00:01:07,460 --> 00:01:09,470
So that way, what
I'll be able to do is

22
00:01:09,470 --> 00:01:11,495
maybe do a little bit of prereq work,

23
00:01:11,495 --> 00:01:14,870
get to the exact spot that
I'm wanting to play with,

24
00:01:14,870 --> 00:01:18,520
and just keep doing whatever it
is that I need to do in here,

25
00:01:18,520 --> 00:01:19,670
Once I've got that done,

26
00:01:19,670 --> 00:01:21,030
then I can move on to the next block,

27
00:01:21,030 --> 00:01:22,550
and maybe I need to go back and make

28
00:01:22,550 --> 00:01:24,710
a couple of changes and
then run back down,

29
00:01:24,710 --> 00:01:26,135
and so forth and so on,

30
00:01:26,135 --> 00:01:29,350
and that's what this is
all going to enable,

31
00:01:29,350 --> 00:01:31,595
Now, you are going to notice that you

32
00:01:31,595 --> 00:01:34,530
could install Jupyter
locally on your system,

33
00:01:34,530 --> 00:01:37,085
That if you head on
over to jupyter,org,

34
00:01:37,085 --> 00:01:39,710
you can download and install Jupyter,

35
00:01:39,710 --> 00:01:40,850
get it up and running,

36
00:01:40,850 --> 00:01:43,130
and actually get the
browser experience that

37
00:01:43,130 --> 00:01:45,980
I'm going to be demoing for you
in just a couple of moments,

38
00:01:45,980 --> 00:01:48,555
running locally on your system,

39
00:01:48,555 --> 00:01:51,350
Now, I'd be remiss if
I do not highlight

40
00:01:51,350 --> 00:01:54,140
the fact that Visual Studio Code also

41
00:01:54,140 --> 00:01:59,450
has a wonderful integration
for Jupyter Notebooks as well,

42
00:01:59,450 --> 00:02:02,360
So, if you really like to
use Visual Studio Code,

43
00:02:02,360 --> 00:02:04,504
you want to stay in that environment,

44
00:02:04,504 --> 00:02:07,160
then you can also configure

45
00:02:07,160 --> 00:02:09,620
Visual Studio Code to give you

46
00:02:09,620 --> 00:02:12,170
the ability to run your
notebooks as well,

47
00:02:12,170 --> 00:02:14,300
right there inside of the editor,

48
00:02:14,300 --> 00:02:16,580
which is personally one of
my favorite little things

49
00:02:16,580 --> 00:02:18,965
inside of VS Code,

50
00:02:18,965 --> 00:02:20,960
If you check up the
GitHub repository,

51
00:02:20,960 --> 00:02:22,460
that's part of this course,

52
00:02:22,460 --> 00:02:26,680
you'll see a link to how you can
go in and set all of that up,

53
00:02:26,680 --> 00:02:28,260
I also want to highlight,

54
00:02:28,260 --> 00:02:30,785
and this is what I'm going
to be using for my demo,

55
00:02:30,785 --> 00:02:33,300
the fact that you can run
Jupyter in the Cloud,

56
00:02:33,300 --> 00:02:35,810
and there's a couple of different
ways that you could do this,

57
00:02:35,810 --> 00:02:38,990
In my case, I'm going
to do it by utilizing

58
00:02:38,990 --> 00:02:43,795
the Azure DSVM or Data
Science Virtual Machine,

59
00:02:43,795 --> 00:02:45,800
What the DSVM is,

60
00:02:45,800 --> 00:02:47,600
is it's a virtual machine,

61
00:02:47,600 --> 00:02:48,995
as you might expect,

62
00:02:48,995 --> 00:02:53,450
that has a whole bunch of
tools already installed and

63
00:02:53,450 --> 00:02:58,000
it's perfect for getting in
and playing around with data,

64
00:02:58,000 --> 00:03:00,680
that most of the things
that you would need,

65
00:03:00,680 --> 00:03:02,630
including Jupyter, is going to be

66
00:03:02,630 --> 00:03:04,850
right there in that nice
neat little package,

67
00:03:04,850 --> 00:03:06,290
All that you have to do is to say,

68
00:03:06,290 --> 00:03:07,370
yes, I want this,

69
00:03:07,370 --> 00:03:10,745
and then create it and
away you go from there,

70
00:03:10,745 --> 00:03:14,600
Once again, we'll have the
instructions on how you could set that

71
00:03:14,600 --> 00:03:18,680
up inside of the GitHub repository,

72
00:03:18,680 --> 00:03:21,230
Let's check out how we can use

73
00:03:21,230 --> 00:03:25,040
Jupyter to start playing
around with some code,

74
00:03:25,040 --> 00:03:27,590
So what you've got here is

75
00:03:27,590 --> 00:03:32,149
the Jupyter Hub set
up inside of my DSVM,

76
00:03:32,149 --> 00:03:34,430
my Data Science Virtual Machine,

77
00:03:34,430 --> 00:03:37,985
and I've already got a few different
folders and things like that,

78
00:03:37,985 --> 00:03:41,960
that come just pre-built
inside of there,

79
00:03:41,960 --> 00:03:47,000
But what I want to do is play
around with a brand new one and

80
00:03:47,000 --> 00:03:52,550
start creating some
notebooks inside of there,

81
00:03:52,550 --> 00:03:57,540
So what I did is I hit New right
up there on the top right,

82
00:03:57,540 --> 00:03:59,030
and what you're going
to notice is I've got

83
00:03:59,030 --> 00:04:01,000
the option to hit folder,

84
00:04:01,000 --> 00:04:03,010
So I'm going to create
a brand new folder here

85
00:04:03,010 --> 00:04:05,360
and you'll notice that it
will just automatically

86
00:04:05,360 --> 00:04:10,790
give me this new little folder
right here called untitled folder,

87
00:04:10,790 --> 00:04:13,250
In order to rename that,

88
00:04:13,250 --> 00:04:15,680
it's an additional
step here that I need

89
00:04:15,680 --> 00:04:19,010
to hit the little check
and then come up here,

90
00:04:19,010 --> 00:04:24,664
hit Rename, and now I can give it
my very creative name of demo,

91
00:04:24,664 --> 00:04:26,570
So now I hit Rename,

92
00:04:26,570 --> 00:04:29,270
now you're going to notice
that it's set up as demo,

93
00:04:29,270 --> 00:04:31,385
Now, I can click on that link,

94
00:04:31,385 --> 00:04:33,739
and now I can start creating

95
00:04:33,739 --> 00:04:36,820
different items that I
might want inside of here,

96
00:04:36,820 --> 00:04:40,205
Now, what's worth highlighting
the fact that inside of here,

97
00:04:40,205 --> 00:04:42,694
I can have things like CSV files,

98
00:04:42,694 --> 00:04:47,240
images and anything else
that I might be using as

99
00:04:47,240 --> 00:04:52,700
part of the manipulations and
work that I'm going to be doing,

100
00:04:52,700 --> 00:04:58,175
But the real center to

101
00:04:58,175 --> 00:05:05,165
everything that we're going to
be working with is a notebook,

102
00:05:05,165 --> 00:05:09,310
So you'll notice once
again that I hit New,

103
00:05:09,310 --> 00:05:11,120
and then there's a whole bunch of

104
00:05:11,120 --> 00:05:14,735
pre-configured options for
me for different notebooks,

105
00:05:14,735 --> 00:05:18,350
What I really like about this
is that if you want to use,

106
00:05:18,350 --> 00:05:19,910
say for example R,

107
00:05:19,910 --> 00:05:22,145
that I've got that
option right there,

108
00:05:22,145 --> 00:05:24,680
if you're wanting to
play around with Scala,

109
00:05:24,680 --> 00:05:25,790
you can do that,

110
00:05:25,790 --> 00:05:27,590
Both R and Scala, by the way,

111
00:05:27,590 --> 00:05:32,205
are languages that are very popular
when you're working with data,

112
00:05:32,205 --> 00:05:36,090
Or I can also go in and choose

113
00:05:36,090 --> 00:05:41,245
my different Python
notebooks as well,

114
00:05:41,245 --> 00:05:46,094
So what I'm going to do is I'm
going to hit py 37 default,

115
00:05:46,094 --> 00:05:49,895
and that's going to set up a
brand new notebook for me,

116
00:05:49,895 --> 00:05:52,810
that is just simply Python,

117
00:05:52,810 --> 00:05:55,880
Now, in order to make this function,

118
00:05:55,880 --> 00:05:58,330
there's always going to be a kernel,

119
00:05:58,330 --> 00:06:00,950
You might have noticed right up here,

120
00:06:00,950 --> 00:06:04,100
there's a little thing that
was going on right up here,

121
00:06:04,100 --> 00:06:05,750
where it's telling me
that it was creating

122
00:06:05,750 --> 00:06:07,765
a kernel and setting all of that up,

123
00:06:07,765 --> 00:06:10,500
that's my runtime behind the scenes,

124
00:06:10,500 --> 00:06:13,250
So if you want to go
in and play around

125
00:06:13,250 --> 00:06:16,385
with that little runtime
that's making it all happen,

126
00:06:16,385 --> 00:06:18,785
then you can hit the Kernel Window,

127
00:06:18,785 --> 00:06:21,725
and then you can choose
to say restarted,

128
00:06:21,725 --> 00:06:24,680
you can reconnect in case

129
00:06:24,680 --> 00:06:26,330
something maybe has
gone wrong or maybe

130
00:06:26,330 --> 00:06:28,220
you opened this up
from somewhere else,

131
00:06:28,220 --> 00:06:31,880
you can restart and have it rerun

132
00:06:31,880 --> 00:06:36,030
everything inside of your notebook,

133
00:06:36,030 --> 00:06:37,490
Then last but not least,

134
00:06:37,490 --> 00:06:39,560
you'll notice right
here that you have

135
00:06:39,560 --> 00:06:43,145
the ability to restart
and clear output,

136
00:06:43,145 --> 00:06:44,915
One big thing to note

137
00:06:44,915 --> 00:06:47,180
about the notebooks when
you're playing with them,

138
00:06:47,180 --> 00:06:49,610
and let's say I may
be load up some data

139
00:06:49,610 --> 00:06:52,100
and I manipulate it
and I get a result,

140
00:06:52,100 --> 00:06:54,500
that actually becomes
part of your notebook,

141
00:06:54,500 --> 00:06:58,070
So you can refer back to
this with the answers,

142
00:06:58,070 --> 00:07:00,605
if you will, already in place,

143
00:07:00,605 --> 00:07:03,065
If you want to start all over again,

144
00:07:03,065 --> 00:07:05,615
that's where that clear
output comes into play,

145
00:07:05,615 --> 00:07:06,980
So that way, it will just get rid of

146
00:07:06,980 --> 00:07:09,440
everything and allow you to redo

147
00:07:09,440 --> 00:07:13,890
whatever it was that
you were working on,

148
00:07:13,890 --> 00:07:18,365
Now, I also want to highlight in
here one very important spot,

149
00:07:18,365 --> 00:07:24,710
and that is that little
square bracket placeholder,

150
00:07:24,710 --> 00:07:26,480
if you will, that's right there,

151
00:07:26,480 --> 00:07:29,950
That will indicate one of
three different things,

152
00:07:29,950 --> 00:07:32,300
If it's blank like it is now,

153
00:07:32,300 --> 00:07:35,450
what that's going to indicate
is that whatever is in

154
00:07:35,450 --> 00:07:39,490
that cell has not run,

155
00:07:39,490 --> 00:07:41,690
Now, if it is running,

156
00:07:41,690 --> 00:07:43,400
then what will happen instead,

157
00:07:43,400 --> 00:07:46,110
is there will be an
asterisk inside of there,

158
00:07:46,110 --> 00:07:49,410
and it's hard for me to get it a
real big asterisk using the tool,

159
00:07:49,410 --> 00:07:51,935
So you can see it's there,

160
00:07:51,935 --> 00:07:53,540
If you see an asterisk,

161
00:07:53,540 --> 00:07:57,430
what that means is that it's
executing, it's currently running,

162
00:07:57,430 --> 00:08:02,005
The last thing that you'll
notice is a number in there,

163
00:08:02,005 --> 00:08:05,710
and what that number is going
to indicate is the order

164
00:08:05,710 --> 00:08:09,320
in which that cell has executed,

165
00:08:09,320 --> 00:08:11,395
and that becomes important because

166
00:08:11,395 --> 00:08:13,975
even though the cells are
going to go top to bottom,

167
00:08:13,975 --> 00:08:15,640
the order of execution doesn't

168
00:08:15,640 --> 00:08:18,050
necessarily need to be top to bottom,

169
00:08:18,050 --> 00:08:20,460
That can actually help
you out sometimes,

170
00:08:20,460 --> 00:08:22,020
Let's say I'm all the way
down towards the bottom,

171
00:08:22,020 --> 00:08:24,030
I've got a ladder work that's
been going on up here,

172
00:08:24,030 --> 00:08:26,405
I try to execute this
one little line of code,

173
00:08:26,405 --> 00:08:27,750
and then I forgot to do something,

174
00:08:27,750 --> 00:08:29,950
Maybe I forgot to load up a library

175
00:08:29,950 --> 00:08:33,350
or to run one last
little line of code,

176
00:08:33,350 --> 00:08:34,870
Well, then what I can do is just

177
00:08:34,870 --> 00:08:36,835
create another cell down
at the very bottom,

178
00:08:36,835 --> 00:08:38,710
run that one little line that I need,

179
00:08:38,710 --> 00:08:39,970
and then go back up,

180
00:08:39,970 --> 00:08:42,250
and then rerun that cell,

181
00:08:42,250 --> 00:08:44,990
So it gives you a lot
of flexibility there,

182
00:08:44,990 --> 00:08:46,910
But you just have to
be careful to make

183
00:08:46,910 --> 00:08:49,070
sure that things are executing

184
00:08:49,070 --> 00:08:54,280
in the order in which you
expect them to execute,

185
00:08:54,280 --> 00:08:57,710
So let's play around
just a little bit here,

186
00:08:57,710 --> 00:09:00,140
I'm going go ahead and say
name equals Christopher,

187
00:09:00,140 --> 00:09:04,955
and then I'm going to say
print name, just like that,

188
00:09:04,955 --> 00:09:07,795
Now, I can run my cell,

189
00:09:07,795 --> 00:09:10,110
There are buttons to run the cells,

190
00:09:10,110 --> 00:09:12,710
You can go in and explore
the buttons on your own,

191
00:09:12,710 --> 00:09:14,615
I'm going be honest with you,

192
00:09:14,615 --> 00:09:17,120
I never remember what
the buttons are,

193
00:09:17,120 --> 00:09:20,420
because there's really
just two shortcut keys

194
00:09:20,420 --> 00:09:22,240
that you need to know,

195
00:09:22,240 --> 00:09:25,950
"Ctrl" "Enter" and "Shift" "Enter",

196
00:09:25,950 --> 00:09:27,630
Watch the difference,

197
00:09:27,630 --> 00:09:29,640
What I'm going to do
here is I'm going to hit

198
00:09:29,640 --> 00:09:31,830
"Ctrl" "Enter" and what

199
00:09:31,830 --> 00:09:36,615
"Ctrl" "Enter" will do is it will
run that cell, and that's it,

200
00:09:36,615 --> 00:09:38,160
It'll just run that cell,

201
00:09:38,160 --> 00:09:40,075
stay there and we're done,

202
00:09:40,075 --> 00:09:42,800
Contrast that with "Shift" "Enter",

203
00:09:42,800 --> 00:09:44,660
So now, I'm going to
hit "Shift" "Enter",

204
00:09:44,660 --> 00:09:47,840
Now, what I want you to notice
is it's still ran the cell,

205
00:09:47,840 --> 00:09:50,660
you'll notice the number
changed from a one to two,

206
00:09:50,660 --> 00:09:53,015
but now I get a brand new cell,

207
00:09:53,015 --> 00:09:54,845
When I use "Shift" "Enter",

208
00:09:54,845 --> 00:09:57,305
what's going to happen
is it will run the cell,

209
00:09:57,305 --> 00:09:58,969
move to the next,

210
00:09:58,969 --> 00:10:01,145
and if there's not already one there,

211
00:10:01,145 --> 00:10:04,480
then it will create a brand new one,

212
00:10:04,480 --> 00:10:08,705
What are the really cool thing
about Jupyter Notebooks?

213
00:10:08,705 --> 00:10:10,375
Is the fact that if I just want to

214
00:10:10,375 --> 00:10:12,205
see what's inside of a variable,

215
00:10:12,205 --> 00:10:16,350
then what I can do is just
end my block with it,

216
00:10:16,350 --> 00:10:20,725
run it, and then it will just
display whatever is inside of there,

217
00:10:20,725 --> 00:10:24,445
What's really cool about
that is the fact that

218
00:10:24,445 --> 00:10:28,930
you'll be doing all really cool
things inside of your notebook,

219
00:10:28,930 --> 00:10:31,390
and then I just want to see
what's inside of an item,

220
00:10:31,390 --> 00:10:33,760
just end your code
with it and it will

221
00:10:33,760 --> 00:10:36,680
print out whatever
is inside of there,

222
00:10:36,680 --> 00:10:40,600
It's probably my favorite feature
inside of Jupyter Notebooks,

223
00:10:40,600 --> 00:10:42,430
because quite frequently,
you're going to be

224
00:10:42,430 --> 00:10:44,500
working with different
pieces of data,

225
00:10:44,500 --> 00:10:46,810
you're not going to necessarily
know what's going on,

226
00:10:46,810 --> 00:10:49,715
You just want a real quick sneak
preview of what's going on,

227
00:10:49,715 --> 00:10:53,250
Jupyter is there to help you out,

228
00:10:53,250 --> 00:10:57,305
The last little thing that
I want to mention is I can

229
00:10:57,305 --> 00:11:03,150
also change my cell
type to be Markdown,

230
00:11:03,170 --> 00:11:08,515
Now, I can use Markdown
inside of here,

231
00:11:08,515 --> 00:11:12,195
So this is, if I can
spell world, there we go,

232
00:11:12,195 --> 00:11:18,224
this is a great way to leave myself,

233
00:11:18,224 --> 00:11:22,010
apparently I'm not able to talk
and type at the same time today,

234
00:11:22,010 --> 00:11:25,460
but that's all right, some
notes, just like that,

235
00:11:25,460 --> 00:11:27,710
So that way I want to indicate

236
00:11:27,710 --> 00:11:30,215
anything else that might be
going on inside up here,

237
00:11:30,215 --> 00:11:32,230
then I can just do
that with Markdown,

238
00:11:32,230 --> 00:11:35,750
Now, Markdown does behave
like a normal cell,

239
00:11:35,750 --> 00:11:38,870
So you'll notice that it's an
edit mode here at the moment,

240
00:11:38,870 --> 00:11:42,110
but when I do a "Ctrl" "Enter"
just to run that cell,

241
00:11:42,110 --> 00:11:44,480
now you'll notice that it

242
00:11:44,480 --> 00:11:48,315
will put it into a more
proper display here,

243
00:11:48,315 --> 00:11:53,680
So maybe what I could do is
I could move that cell up,

244
00:11:53,680 --> 00:11:56,090
I'm just hitting those little
arrows right up there,

245
00:11:56,090 --> 00:11:57,245
up to the very top,

246
00:11:57,245 --> 00:12:01,150
So now I've got that as
part of my hello world,

247
00:12:01,150 --> 00:12:05,390
So there is the quick version,

248
00:12:05,390 --> 00:12:07,910
if you will, of
getting in and working

249
00:12:07,910 --> 00:12:10,595
around with Jupyter Notebooks,

250
00:12:10,595 --> 00:12:15,125
There's an awful lot of power
and tooling inside of there,

251
00:12:15,125 --> 00:12:19,760
but that's probably
the most common tools,

252
00:12:19,760 --> 00:12:22,100
the most common
options that you'll be

253
00:12:22,100 --> 00:12:25,070
using when you get
in and play around,

254
00:12:25,070 --> 00:12:27,515
This is going to be the core of

255
00:12:27,515 --> 00:12:30,635
all the demos that we're going
to be doing in this course,

256
00:12:30,635 --> 00:12:32,870
Everything that we're
going to do is going to be

257
00:12:32,870 --> 00:12:35,360
done inside of our Jupyter Notebooks,

258
00:12:35,360 --> 00:12:37,790
I again want to highlight
the fact that you

259
00:12:37,790 --> 00:12:40,715
can run this in the Cloud
like I am with DSVM,

260
00:12:40,715 --> 00:12:42,260
you can run this locally,

261
00:12:42,260 --> 00:12:46,370
and you could also do this
inside Visual Studio Code,

262
00:12:46,370 --> 00:12:47,780
Again, you can check out

263
00:12:47,780 --> 00:12:50,630
the GitHub repository
for links on how to do

264
00:12:50,630 --> 00:12:55,950
all the installations and how
to set up Visual Studio Code,

